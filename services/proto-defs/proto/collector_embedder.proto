syntax = "proto3";

package loggingembedding;

import "google/protobuf/timestamp.proto";

message Metadata {
  string stream = 1;
  optional string flag = 2;
}

message NormalizedLog {
  google.protobuf.Timestamp timestamp = 1;
  optional string level = 2;
  string message = 3;
  optional Metadata metadata = 4;
  string raw_line = 5;
}

message EmbedResponse {
  int64 logs_received = 1;
  string status = 2;
}

service LogEmbedder {
  rpc HealthCheck(google.protobuf.Empty) returns (HealthStatus);
  rpc GetVersion(google.protobuf.Empty) returns (VersionInfo);
  rpc GetStats(google.protobuf.Empty) returns (ServiceMetrics);
  // TODO: Error handling / gRPC status codes
}

service LogCollector {
  rpc HealthCheck(google.protobuf.Empty) returns (HealthStatus);
  rpc GetVersion(google.protobuf.Empty) returns (VersionInfo);
  rpc GetStats(google.protobuf.Empty) returns (ServiceMetrics);
  rpc StreamLogs(stream NormalizedLog) returns (stream EmbedResponse);
  // TODO: Error handling / gRPC status codes
}
